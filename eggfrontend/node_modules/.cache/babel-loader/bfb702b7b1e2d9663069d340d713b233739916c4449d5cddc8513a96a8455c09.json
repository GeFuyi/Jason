{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      allUsers: [],\n      recentUsers: [],\n      dialogVisible: false,\n      dialogTitle: '新增用户',\n      form: {\n        id: null,\n        username: '',\n        email: '',\n        password: '',\n        age: null,\n        gender: true\n      },\n      editMode: false,\n      filterType: 'ALL',\n      filterOptions: [{\n        label: '全部用户',\n        value: 'ALL'\n      }, {\n        label: '最近改动',\n        value: 'RECENT'\n      }],\n      queryId: null\n    };\n  },\n  mounted() {\n    this.fetchAllUsers();\n    this.fetchRecentUsers();\n  },\n  methods: {\n    fetchAllUsers() {\n      axios.get('http://localhost:8090/user').then(res => {\n        this.allUsers = res.data;\n      }).catch(() => {\n        this.$message.error('获取全部用户失败');\n      });\n    },\n    fetchRecentUsers() {\n      axios.get('http://localhost:8090/user/recent').then(res => {\n        this.recentUsers = res.data;\n      }).catch(() => {\n        this.$message.error('获取最近改动失败');\n      });\n    },\n    fetchUserById() {\n      if (!this.queryId) return this.$message.warning('请输入用户ID');\n      axios.get(`http://localhost:8090/user/${this.queryId}`).then(res => {\n        if (res.data) this.allUsers = [res.data];else this.$message.info('未找到该 ID 的用户');\n      });\n    },\n    openDialog(mode, user) {\n      this.editMode = mode === 'edit';\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户';\n      this.form = this.editMode && user ? {\n        ...user\n      } : {\n        id: null,\n        username: '',\n        email: '',\n        password: '',\n        age: null,\n        gender: true\n      };\n      this.dialogVisible = true;\n    },\n    submitForm() {\n      if (this.editMode) {\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form).then(() => {\n          this.$message.success('更新成功');\n          this.dialogVisible = false;\n          this.fetchAllUsers();\n          this.fetchRecentUsers();\n        });\n      } else {\n        axios.post('http://localhost:8090/user', this.form).then(() => {\n          this.$message.success('新增成功');\n          this.dialogVisible = false;\n          this.fetchAllUsers();\n          this.fetchRecentUsers();\n        });\n      }\n    },\n    deleteUser(id) {\n      axios.delete(`http://localhost:8090/user/${id}`).then(() => {\n        this.$message.success('删除成功');\n        this.fetchAllUsers();\n        this.fetchRecentUsers();\n      });\n    },\n    clearRecentCache() {\n      axios.post('http://localhost:8090/user/recent/clear').then(() => {\n        this.$message.success('RECENT 缓存已清空');\n        this.fetchRecentUsers();\n      });\n    },\n    removeRecentCache(id) {\n      axios.delete(`http://localhost:8090/user/recent/remove/${id}`).then(() => {\n        this.$message.success(`RECENT缓存已移除ID=${id}`);\n        this.fetchRecentUsers();\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","allUsers","recentUsers","dialogVisible","dialogTitle","form","id","username","email","password","age","gender","editMode","filterType","filterOptions","label","value","queryId","mounted","fetchAllUsers","fetchRecentUsers","methods","get","then","res","catch","$message","error","fetchUserById","warning","info","openDialog","mode","user","submitForm","put","success","post","deleteUser","delete","clearRecentCache","removeRecentCache"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist-container\">\r\n    <el-card class=\"userlist-card\">\r\n      <div class=\"header\">\r\n        <h2>用户管理</h2>\r\n        <div class=\"header-controls\">\r\n          <el-select v-model=\"filterType\" placeholder=\"选择显示类型\" size=\"small\">\r\n            <el-option v-for=\"option in filterOptions\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\"/>\r\n          </el-select>\r\n\r\n          <template v-if=\"filterType==='ALL'\">\r\n            <el-input v-model.number=\"queryId\" placeholder=\"输入用户ID查询\" size=\"small\" style=\"width:120px\"/>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"fetchUserById\">查询</el-button>\r\n          </template>\r\n\r\n          <el-button type=\"primary\" @click=\"openDialog('add')\">新增用户</el-button>\r\n\r\n          <template v-if=\"filterType==='RECENT'\">\r\n            <el-button type=\"warning\" size=\"small\" @click=\"clearRecentCache\">清空 RECENT</el-button>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ALL 用户表格 -->\r\n      <el-table v-show=\"filterType==='ALL'\" :data=\"allUsers\" border stripe style=\"width:100%; max-height:600px;\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\"/>\r\n        <el-table-column prop=\"username\" label=\"用户名\"/>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"/>\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\"/>\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">{{ scope.row.gender ? '男' : '女' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"260\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- RECENT 用户表格 -->\r\n      <el-table v-show=\"filterType==='RECENT'\" :data=\"recentUsers\" border stripe style=\"width:100%; max-height:600px;\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\"/>\r\n        <el-table-column prop=\"username\" label=\"用户名\"/>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"/>\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\"/>\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">{{ scope.row.gender ? '男' : '女' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"260\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n            <el-button size=\"mini\" type=\"warning\" @click=\"removeRecentCache(scope.row.id)\">移除缓存</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑用户对话框保持不变 -->\r\n      <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\r\n        <el-form :model=\"form\" ref=\"userForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\"><el-input v-model=\"form.username\"/></el-form-item>\r\n          <el-form-item label=\"邮箱\"><el-input v-model=\"form.email\"/></el-form-item>\r\n          <el-form-item label=\"密码\"><el-input type=\"password\" v-model=\"form.password\"/></el-form-item>\r\n          <el-form-item label=\"年龄\"><el-input type=\"number\" v-model=\"form.age\"/></el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group v-model=\"form.gender\">\r\n              <el-radio :label=\"true\">男</el-radio>\r\n              <el-radio :label=\"false\">女</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n          <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">{{ dialogTitle }}</el-button>\r\n        </template>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    return {\r\n      allUsers: [],\r\n      recentUsers: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '新增用户',\r\n      form: { id:null, username:'', email:'', password:'', age:null, gender:true },\r\n      editMode:false,\r\n      filterType:'ALL',\r\n      filterOptions:[\r\n        { label:'全部用户', value:'ALL' },\r\n        { label:'最近改动', value:'RECENT' }\r\n      ],\r\n      queryId:null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchAllUsers()\r\n    this.fetchRecentUsers()\r\n  },\r\n  methods: {\r\n    fetchAllUsers() {\r\n      axios.get('http://localhost:8090/user')\r\n          .then(res=>{ this.allUsers=res.data })\r\n          .catch(()=>{ this.$message.error('获取全部用户失败') })\r\n    },\r\n    fetchRecentUsers() {\r\n      axios.get('http://localhost:8090/user/recent')\r\n          .then(res=>{ this.recentUsers=res.data })\r\n          .catch(()=>{ this.$message.error('获取最近改动失败') })\r\n    },\r\n    fetchUserById() {\r\n      if(!this.queryId) return this.$message.warning('请输入用户ID')\r\n      axios.get(`http://localhost:8090/user/${this.queryId}`)\r\n          .then(res=>{\r\n            if(res.data) this.allUsers=[res.data]\r\n            else this.$message.info('未找到该 ID 的用户')\r\n          })\r\n    },\r\n    openDialog(mode,user) {\r\n      this.editMode = mode==='edit'\r\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户'\r\n      this.form = this.editMode && user ? {...user} : { id:null, username:'', email:'', password:'', age:null, gender:true }\r\n      this.dialogVisible=true\r\n    },\r\n    submitForm() {\r\n      if(this.editMode) {\r\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form)\r\n            .then(()=>{ this.$message.success('更新成功'); this.dialogVisible=false; this.fetchAllUsers(); this.fetchRecentUsers() })\r\n      } else {\r\n        axios.post('http://localhost:8090/user', this.form)\r\n            .then(()=>{ this.$message.success('新增成功'); this.dialogVisible=false; this.fetchAllUsers(); this.fetchRecentUsers() })\r\n      }\r\n    },\r\n    deleteUser(id) {\r\n      axios.delete(`http://localhost:8090/user/${id}`)\r\n          .then(()=>{ this.$message.success('删除成功'); this.fetchAllUsers(); this.fetchRecentUsers() })\r\n    },\r\n    clearRecentCache() {\r\n      axios.post('http://localhost:8090/user/recent/clear')\r\n          .then(()=>{ this.$message.success('RECENT 缓存已清空'); this.fetchRecentUsers() })\r\n    },\r\n    removeRecentCache(id) {\r\n      axios.delete(`http://localhost:8090/user/recent/remove/${id}`)\r\n          .then(()=>{ this.$message.success(`RECENT缓存已移除ID=${id}`); this.fetchRecentUsers() })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}