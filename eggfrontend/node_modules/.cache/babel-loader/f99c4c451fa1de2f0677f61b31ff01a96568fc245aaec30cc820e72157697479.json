{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"userlist-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"header-controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"userlist-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[14] || (_cache[14] = _createElementVNode(\"h2\", null, \"用户管理\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 显示类型选择 \"), _createVNode(_component_el_select, {\n      modelValue: $data.filterType,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filterType = $event),\n      placeholder: \"选择显示类型\",\n      onChange: $options.onFilterChange,\n      size: \"small\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filterOptions, option => {\n        return _openBlock(), _createBlock(_component_el_option, {\n          key: option.value,\n          label: option.label,\n          value: option.value\n        }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createCommentVNode(\" 单条查询 & 显示全部，只在 ALL 模式 \"), $data.filterType === 'ALL' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_el_input, {\n      modelValue: $data.queryId,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.queryId = $event),\n      modelModifiers: {\n        number: true\n      },\n      placeholder: \"输入用户ID查询\",\n      size: \"small\",\n      style: {\n        \"width\": \"120px\"\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: $options.fetchUserById\n    }, {\n      default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"查询\", -1 /* CACHED */)])),\n      _: 1 /* STABLE */,\n      __: [10]\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n      type: \"info\",\n      size: \"small\",\n      onClick: $options.fetchUsers\n    }, {\n      default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"显示全部\", -1 /* CACHED */)])),\n      _: 1 /* STABLE */,\n      __: [11]\n    }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[2] || (_cache[2] = $event => $options.openDialog('add'))\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"新增用户\", -1 /* CACHED */)])),\n      _: 1 /* STABLE */,\n      __: [12]\n    }), _createCommentVNode(\" 清空 RECENT 缓存，只在 RECENT 模式 \"), $data.filterType === 'RECENT' ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 1,\n      type: \"warning\",\n      size: \"small\",\n      onClick: $options.clearRecentCache\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"清空 RECENT\", -1 /* CACHED */)])),\n      _: 1 /* STABLE */,\n      __: [13]\n    }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 使用 v-if 控制表格渲染，添加加载状态和唯一 key \"), $data.tableVisible && !$data.loading ? _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $data.users,\n      border: \"\",\n      stripe: \"\",\n      key: $data.filterType,\n      style: {\n        \"width\": \"100%\",\n        \"min-height\": \"300px\",\n        \"max-height\": \"600px\"\n      },\n      \"row-key\": row => row.id\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"60\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"用户名\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"email\",\n        label: \"邮箱\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"age\",\n        label: \"年龄\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"gender\",\n        label: \"性别\",\n        width: \"80\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.gender ? '男' : '女'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"260\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          size: \"mini\",\n          type: \"primary\",\n          onClick: $event => $options.openDialog('edit', scope.row)\n        }, {\n          default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"编辑\", -1 /* CACHED */)])),\n          _: 2 /* DYNAMIC */,\n          __: [15]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          size: \"mini\",\n          type: \"danger\",\n          onClick: $event => $options.deleteUser(scope.row.id)\n        }, {\n          default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"删除\", -1 /* CACHED */)])),\n          _: 2 /* DYNAMIC */,\n          __: [16]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), $data.filterType === 'RECENT' ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          size: \"mini\",\n          type: \"warning\",\n          onClick: $event => $options.removeRecentCache(scope.row.id)\n        }, {\n          default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" 移除缓存 \", -1 /* CACHED */)])),\n          _: 2 /* DYNAMIC */,\n          __: [17]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\", \"row-key\"])), [[_directive_loading, $data.loading]]) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 新增/编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n      modelValue: $data.dialogVisible,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.dialogVisible = $event),\n      title: $data.dialogTitle\n    }, {\n      footer: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[8] || (_cache[8] = $event => $data.dialogVisible = false)\n      }, {\n        default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"取消\", -1 /* CACHED */)])),\n        _: 1 /* STABLE */,\n        __: [20]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.dialogTitle), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        model: $data.form,\n        ref: \"userForm\",\n        \"label-width\": \"80px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"用户名\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.form.username,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.username = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"邮箱\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.form.email,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.email = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: $data.form.password,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.form.password = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"年龄\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"number\",\n            modelValue: $data.form.age,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.age = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"性别\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n            modelValue: $data.form.gender,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.form.gender = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio, {\n              label: true\n            }, {\n              default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\"男\", -1 /* CACHED */)])),\n              _: 1 /* STABLE */,\n              __: [18]\n            }), _createVNode(_component_el_radio, {\n              label: false\n            }, {\n              default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"女\", -1 /* CACHED */)])),\n              _: 1 /* STABLE */,\n              __: [19]\n            })]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"title\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","_component_el_select","$data","filterType","$event","placeholder","onChange","$options","onFilterChange","size","_Fragment","_renderList","filterOptions","option","_createBlock","_component_el_option","key","value","label","_component_el_input","queryId","number","style","_component_el_button","type","onClick","fetchUserById","_cache","fetchUsers","openDialog","clearRecentCache","tableVisible","loading","_component_el_table","data","users","border","stripe","row","id","_component_el_table_column","prop","width","default","_withCtx","scope","gender","deleteUser","removeRecentCache","_component_el_dialog","dialogVisible","title","dialogTitle","footer","submitForm","_component_el_form","model","form","ref","_component_el_form_item","username","email","password","age","_component_el_radio_group","_component_el_radio"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist-container\">\r\n    <el-card class=\"userlist-card\">\r\n      <div class=\"header\">\r\n        <h2>用户管理</h2>\r\n        <div class=\"header-controls\">\r\n          <!-- 显示类型选择 -->\r\n          <el-select v-model=\"filterType\" placeholder=\"选择显示类型\" @change=\"onFilterChange\" size=\"small\">\r\n            <el-option v-for=\"option in filterOptions\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\"></el-option>\r\n          </el-select>\r\n\r\n          <!-- 单条查询 & 显示全部，只在 ALL 模式 -->\r\n          <template v-if=\"filterType === 'ALL'\">\r\n            <el-input v-model.number=\"queryId\" placeholder=\"输入用户ID查询\" size=\"small\" style=\"width: 120px;\" />\r\n            <el-button type=\"primary\" size=\"small\" @click=\"fetchUserById\">查询</el-button>\r\n            <el-button type=\"info\" size=\"small\" @click=\"fetchUsers\">显示全部</el-button>\r\n          </template>\r\n\r\n          <el-button type=\"primary\" @click=\"openDialog('add')\">新增用户</el-button>\r\n\r\n          <!-- 清空 RECENT 缓存，只在 RECENT 模式 -->\r\n          <template v-if=\"filterType === 'RECENT'\">\r\n            <el-button type=\"warning\" size=\"small\" @click=\"clearRecentCache\">清空 RECENT</el-button>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 使用 v-if 控制表格渲染，添加加载状态和唯一 key -->\r\n      <el-table\r\n          v-if=\"tableVisible && !loading\"\r\n          :data=\"users\"\r\n          border\r\n          stripe\r\n          :key=\"filterType\"\r\n          style=\"width: 100%; min-height: 300px; max-height: 600px;\"\r\n          v-loading=\"loading\"\r\n          :row-key=\"row => row.id\"\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column prop=\"email\" label=\"邮箱\" />\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\" />\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">{{ scope.row.gender ? '男' : '女' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"260\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n            <el-button\r\n                v-if=\"filterType === 'RECENT'\"\r\n                size=\"mini\"\r\n                type=\"warning\"\r\n                @click=\"removeRecentCache(scope.row.id)\"\r\n            >\r\n              移除缓存\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑用户对话框 -->\r\n      <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\r\n        <el-form :model=\"form\" ref=\"userForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\">\r\n            <el-input v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\">\r\n            <el-input v-model=\"form.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\">\r\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"年龄\">\r\n            <el-input type=\"number\" v-model=\"form.age\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group v-model=\"form.gender\">\r\n              <el-radio :label=\"true\">男</el-radio>\r\n              <el-radio :label=\"false\">女</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">{{ dialogTitle }}</el-button>\r\n        </template>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { nextTick } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '新增用户',\r\n      form: { id: null, username: '', email: '', password: '', age: null, gender: true },\r\n      editMode: false,\r\n      filterType: 'ALL',\r\n      filterOptions: [\r\n        { label: '全部用户', value: 'ALL' },\r\n        { label: '最近改动', value: 'RECENT' }\r\n      ],\r\n      queryId: null,\r\n      tableVisible: false, // 初始隐藏表格\r\n      loading: false, // 添加加载状态\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  },\r\n  methods: {\r\n    onFilterChange() {\r\n      this.loading = true;\r\n      this.tableVisible = false;\r\n      nextTick(() => {\r\n        this.fetchUsers();\r\n      });\r\n    },\r\n    fetchUsers() {\r\n      this.loading = true;\r\n      let url = this.filterType === 'RECENT' ? 'http://localhost:8090/user/recent' : 'http://localhost:8090/user';\r\n      axios\r\n          .get(url)\r\n          .then((res) => {\r\n            this.users = res.data || [];\r\n            // 确保数据加载完成后渲染\r\n            nextTick(() => {\r\n              setTimeout(() => {\r\n                this.tableVisible = true;\r\n                this.loading = false;\r\n              }, 50); // 50ms 延迟，确保 ResizeObserver 完成\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            this.$message.error('获取用户列表失败');\r\n            console.error(err);\r\n            nextTick(() => {\r\n              this.tableVisible = true;\r\n              this.loading = false;\r\n            });\r\n          });\r\n    },\r\n    fetchUserById() {\r\n      if (!this.queryId) return this.$message.warning('请输入用户ID');\r\n      if (this.filterType !== 'ALL') return;\r\n      this.loading = true;\r\n      this.tableVisible = false;\r\n      axios\r\n          .get(`http://localhost:8090/user/${this.queryId}`)\r\n          .then((res) => {\r\n            if (res.data) this.users = [res.data];\r\n            else this.$message.info('未找到该 ID 的用户');\r\n            nextTick(() => {\r\n              setTimeout(() => {\r\n                this.tableVisible = true;\r\n                this.loading = false;\r\n              }, 50); // 50ms 延迟\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            this.$message.error('查询失败');\r\n            console.error(err);\r\n            nextTick(() => {\r\n              this.tableVisible = true;\r\n              this.loading = false;\r\n            });\r\n          });\r\n    },\r\n    openDialog(mode, user) {\r\n      this.editMode = mode === 'edit';\r\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户';\r\n      this.form = this.editMode && user ? { ...user } : { id: null, username: '', email: '', password: '', age: null, gender: true };\r\n      this.dialogVisible = true;\r\n    },\r\n    submitForm() {\r\n      this.loading = true;\r\n      this.tableVisible = false;\r\n      if (this.editMode) {\r\n        axios\r\n            .put(`http://localhost:8090/user/${this.form.id}`, this.form)\r\n            .then(() => {\r\n              this.$message.success('更新成功');\r\n              this.dialogVisible = false;\r\n              this.fetchUsers();\r\n            })\r\n            .catch(() => {\r\n              this.$message.error('更新请求失败');\r\n              this.tableVisible = true;\r\n              this.loading = false;\r\n            });\r\n      } else {\r\n        axios\r\n            .post('http://localhost:8090/user', this.form)\r\n            .then(() => {\r\n              this.$message.success('新增成功');\r\n              this.dialogVisible = false;\r\n              this.fetchUsers();\r\n            })\r\n            .catch(() => {\r\n              this.$message.error('新增请求失败');\r\n              this.tableVisible = true;\r\n              this.loading = false;\r\n            });\r\n      }\r\n    },\r\n    deleteUser(id) {\r\n      this.$confirm('确定删除该用户吗？', '提示', { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' })\r\n          .then(() => {\r\n            this.loading = true;\r\n            this.tableVisible = false;\r\n            axios\r\n                .delete(`http://localhost:8090/user/${id}`)\r\n                .then(() => {\r\n                  this.$message.success('删除成功');\r\n                  this.fetchUsers();\r\n                })\r\n                .catch(() => {\r\n                  this.$message.error('删除请求失败');\r\n                  this.tableVisible = true;\r\n                  this.loading = false;\r\n                });\r\n          })\r\n          .catch(() => {});\r\n    },\r\n    clearRecentCache() {\r\n      this.loading = true;\r\n      this.tableVisible = false;\r\n      axios\r\n          .post('http://localhost:8090/user/recent/clear')\r\n          .then(() => {\r\n            this.$message.success('RECENT 缓存已清空');\r\n            this.fetchUsers();\r\n          })\r\n          .catch(() => {\r\n            this.$message.error('清空缓存失败');\r\n            this.tableVisible = true;\r\n            this.loading = false;\r\n          });\r\n    },\r\n    removeRecentCache(id) {\r\n      this.loading = true;\r\n      this.tableVisible = false;\r\n      axios\r\n          .delete(`http://localhost:8090/user/recent/remove/${id}`)\r\n          .then(() => {\r\n            this.$message.success(`RECENT 缓存已移除ID=${id}`);\r\n            this.fetchUsers();\r\n          })\r\n          .catch(() => {\r\n            this.$message.error('移除缓存失败');\r\n            this.tableVisible = true;\r\n            this.loading = false;\r\n          });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.userlist-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 30px;\r\n  background: #f5f5f5;\r\n  min-height: 100vh;\r\n}\r\n.userlist-card {\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n.header-controls {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n.el-table .warning {\r\n  color: #e6a23c;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}