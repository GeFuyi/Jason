{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport egg from '@/utils/egg';\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    async submit() {\n      try {\n        const res = await egg.post('/user/login', this.form);\n        // res 已经是 data 对象了，不需要 .data\n        const token = res.token;\n        const userId = res.userId;\n        if (token) localStorage.setItem('token', token);\n        if (userId) sessionStorage.setItem('userId', userId);\n        this.$message.success(res.message || '登录成功');\n        this.$router.push('/chatroom');\n      } catch (err) {\n        this.$message.error(err.message || '登录请求失败');\n        console.error(err);\n      }\n    },\n    goRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["egg","name","data","form","username","password","methods","submit","res","post","token","userId","localStorage","setItem","sessionStorage","$message","success","message","$router","push","err","error","console","goRegister"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <el-card class=\"auth-card\">\r\n      <h2 style=\"text-align:center;margin-bottom:20px\">登录</h2>\r\n      <el-form :model=\"form\" ref=\"loginForm\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名/邮箱\">\r\n          <el-input v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submit\" style=\"width:100%\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div style=\"text-align:center\">\r\n        <span>还没有账号？</span>\r\n        <el-link type=\"primary\" @click=\"goRegister\">去注册</el-link>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport egg from '@/utils/egg'\r\n\r\nexport default {\r\n  name: 'UserLogin',\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      try {\r\n        const res = await egg.post('/user/login', this.form)\r\n        // res 已经是 data 对象了，不需要 .data\r\n        const token = res.token\r\n        const userId = res.userId\r\n\r\n        if (token) localStorage.setItem('token', token)\r\n        if (userId) sessionStorage.setItem('userId', userId)\r\n\r\n        this.$message.success(res.message || '登录成功')\r\n        this.$router.push('/chatroom')\r\n      } catch (err) {\r\n        this.$message.error(err.message || '登录请求失败')\r\n        console.error(err)\r\n      }\r\n    },\r\n\r\n    goRegister() {\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.auth-card {\r\n  width: 400px;\r\n  padding: 30px;\r\n}\r\n</style>\r\n"],"mappings":";AAwBA,OAAOA,GAAE,MAAO,aAAY;AAE5B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMR,GAAG,CAACS,IAAI,CAAC,aAAa,EAAE,IAAI,CAACN,IAAI;QACnD;QACA,MAAMO,KAAI,GAAIF,GAAG,CAACE,KAAI;QACtB,MAAMC,MAAK,GAAIH,GAAG,CAACG,MAAK;QAExB,IAAID,KAAK,EAAEE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK;QAC9C,IAAIC,MAAM,EAAEG,cAAc,CAACD,OAAO,CAAC,QAAQ,EAAEF,MAAM;QAEnD,IAAI,CAACI,QAAQ,CAACC,OAAO,CAACR,GAAG,CAACS,OAAM,IAAK,MAAM;QAC3C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW;MAC/B,EAAE,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACL,QAAQ,CAACM,KAAK,CAACD,GAAG,CAACH,OAAM,IAAK,QAAQ;QAC3CK,OAAO,CAACD,KAAK,CAACD,GAAG;MACnB;IACF,CAAC;IAEDG,UAAUA,CAAA,EAAG;MACX,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC,WAAW;IAC/B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}