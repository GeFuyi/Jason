{"ast":null,"code":"import { ref, reactive, onMounted } from \"vue\";\nimport egg from '@/utils/egg';\nimport { ElMessageBox } from \"element-plus\";\nexport default {\n  name: \"UserList\",\n  setup() {\n    const criteria = reactive({\n      username: null,\n      email: null,\n      age: null,\n      gender: null\n    });\n    const usernameList = ref([]);\n    const emailList = ref([]);\n    const ageList = ref([]);\n    const pagedUsers = ref([]);\n    const page = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const totalPages = ref(1);\n    const pageSizes = ref([5, 10, 20]);\n    const dialogVisible = ref(false);\n    const dialogTitle = ref(\"新增用户\");\n    const formUser = reactive({\n      id: null,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      age: null,\n      gender: 1\n    });\n    const buildQueryParams = () => {\n      const params = {\n        page: page.value,\n        pageSize: pageSize.value\n      };\n      if (criteria.username) params.username = criteria.username;\n      if (criteria.email) params.email = criteria.email;\n      if (criteria.age) params.age = criteria.age;\n      if (criteria.gender !== null && criteria.gender !== \"\") params.gender = criteria.gender;\n      return params;\n    };\n    const fetchOptions = async () => {\n      try {\n        const [uRes, eRes, aRes] = await Promise.all([egg.get(`/user/options/username`), egg.get(`/user/options/email`), egg.get(`/user/options/age`)]);\n        usernameList.value = Array.isArray(uRes) ? uRes : [];\n        emailList.value = Array.isArray(eRes) ? eRes : [];\n        ageList.value = Array.isArray(aRes) ? aRes : [];\n      } catch (err) {\n        console.error(\"获取下拉选项失败:\", err.message);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const res = await egg.get(`/user/query`, {\n          params: buildQueryParams()\n        });\n        pagedUsers.value = Array.isArray(res.data) ? res.data : [];\n        total.value = res.total || 0;\n        totalPages.value = Math.max(1, Math.ceil(total.value / pageSize.value));\n      } catch (err) {\n        console.error(\"获取用户列表失败:\", err.message);\n      }\n    };\n    const onQuery = async () => {\n      page.value = 1;\n      await fetchUsers();\n    };\n    const onReset = async () => {\n      criteria.username = null;\n      criteria.email = null;\n      criteria.age = null;\n      criteria.gender = null;\n      page.value = 1;\n      await fetchUsers();\n    };\n    const changePage = async p => {\n      page.value = p;\n      await fetchUsers();\n    };\n    const handleSizeChange = async newSize => {\n      pageSize.value = newSize;\n      page.value = 1;\n      await fetchUsers();\n    };\n    const openDialog = (type, user = null) => {\n      dialogTitle.value = type === \"add\" ? \"新增用户\" : \"编辑用户\";\n      if (user) {\n        Object.assign(formUser, user);\n      } else {\n        formUser.id = null;\n        formUser.username = \"\";\n        formUser.email = \"\";\n        formUser.password = \"\";\n        formUser.age = null;\n        formUser.gender = 1;\n      }\n      dialogVisible.value = true;\n    };\n    const saveUser = async () => {\n      try {\n        if (formUser.id) {\n          await egg.put(`/user/${formUser.id}`, {\n            ...formUser\n          });\n        } else {\n          await egg.post(`/user`, {\n            ...formUser\n          });\n        }\n        dialogVisible.value = false;\n        await fetchOptions();\n        await fetchUsers();\n      } catch (err) {\n        console.error(\"保存用户失败:\", err.message);\n      }\n    };\n    const confirmDelete = async id => {\n      try {\n        await ElMessageBox.confirm(\"确定要删除该用户吗？\", \"删除确认\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        });\n        await egg.delete(`/user/${id}`);\n        await fetchOptions();\n        await fetchUsers();\n      } catch (err) {\n        console.error(\"删除用户失败:\", err.message);\n      }\n    };\n    onMounted(async () => {\n      await fetchOptions();\n      await fetchUsers();\n    });\n    return {\n      criteria,\n      usernameList,\n      emailList,\n      ageList,\n      pagedUsers,\n      page,\n      pageSize,\n      total,\n      totalPages,\n      pageSizes,\n      dialogVisible,\n      dialogTitle,\n      formUser,\n      onQuery,\n      onReset,\n      changePage,\n      handleSizeChange,\n      openDialog,\n      saveUser,\n      confirmDelete\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","egg","ElMessageBox","name","setup","criteria","username","email","age","gender","usernameList","emailList","ageList","pagedUsers","page","pageSize","total","totalPages","pageSizes","dialogVisible","dialogTitle","formUser","id","password","buildQueryParams","params","value","fetchOptions","uRes","eRes","aRes","Promise","all","get","Array","isArray","err","console","error","message","fetchUsers","res","data","Math","max","ceil","onQuery","onReset","changePage","p","handleSizeChange","newSize","openDialog","type","user","Object","assign","saveUser","put","post","confirmDelete","confirm","confirmButtonText","cancelButtonText","delete"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-list\">\r\n    <el-card shadow=\"hover\">\r\n      <el-button style=\"float: center; margin-bottom: 10px;\" type=\"primary\" @click=\"$router.push('/chatroom')\">\r\n        去聊天\r\n      </el-button>\r\n      <h2>用户管理</h2>\r\n\r\n      <!-- 条件筛选 -->\r\n      <div class=\"filters\">\r\n        <el-select class=\"filter-item\" v-model=\"criteria.username\" placeholder=\"全部用户名\" clearable>\r\n          <el-option v-for=\"u in usernameList\" :key=\"u\" :label=\"u\" :value=\"u\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select class=\"filter-item\" v-model=\"criteria.email\" placeholder=\"全部邮箱\" clearable>\r\n          <el-option v-for=\"e in emailList\" :key=\"e\" :label=\"e\" :value=\"e\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select class=\"filter-item\" v-model=\"criteria.age\" placeholder=\"全部年龄\" clearable>\r\n          <el-option v-for=\"a in ageList\" :key=\"a\" :label=\"a\" :value=\"a\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select class=\"filter-item\" v-model=\"criteria.gender\" placeholder=\"全部性别\" clearable>\r\n          <el-option label=\"男\" :value=\"1\"></el-option>\r\n          <el-option label=\"女\" :value=\"0\"></el-option>\r\n        </el-select>\r\n\r\n        <el-button class=\"filter-item\" type=\"primary\" @click=\"onQuery\">查询</el-button>\r\n        <el-button class=\"filter-item\" type=\"warning\" @click=\"onReset\">重置</el-button>\r\n        <el-button class=\"filter-item\" type=\"success\" @click=\"openDialog('add')\">新增用户</el-button>\r\n      </div>\r\n\r\n      <!-- 用户表格 -->\r\n      <el-table :data=\"pagedUsers\" style=\"width: 100%\" stripe>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\"/>\r\n        <el-table-column prop=\"username\" label=\"用户名\"/>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"/>\r\n        <el-table-column prop=\"password\" label=\"密码\"/>\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\"/>\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.gender === 1 ? '男' : '女' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"220\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"confirmDelete(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-info\">\r\n        当前页: {{ page }} / {{ totalPages }} ，总条数: {{ total }}\r\n      </div>\r\n      <el-pagination\r\n          background\r\n          layout=\"sizes, prev, pager, next\"\r\n          :page-size=\"pageSize\"\r\n          :current-page=\"page\"\r\n          :total=\"total\"\r\n          :page-sizes=\"pageSizes\"\r\n          @current-change=\"changePage\"\r\n          @size-change=\"handleSizeChange\"\r\n      ></el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 新增/编辑用户弹窗 -->\r\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\">\r\n      <el-form :model=\"formUser\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"formUser.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"formUser.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"formUser.password\" type=\"text\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model.number=\"formUser.age\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-select v-model=\"formUser.gender\">\r\n            <el-option label=\"男\" :value=\"1\"></el-option>\r\n            <el-option label=\"女\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveUser\">保存</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {ref, reactive, onMounted} from \"vue\";\r\nimport egg from '@/utils/egg'\r\nimport {ElMessageBox} from \"element-plus\";\r\n\r\nexport default {\r\n  name: \"UserList\",\r\n  setup() {\r\n    const criteria = reactive({username: null, email: null, age: null, gender: null});\r\n    const usernameList = ref([]);\r\n    const emailList = ref([]);\r\n    const ageList = ref([]);\r\n\r\n    const pagedUsers = ref([]);\r\n    const page = ref(1);\r\n    const pageSize = ref(10);\r\n    const total = ref(0);\r\n    const totalPages = ref(1);\r\n    const pageSizes = ref([5, 10, 20]);\r\n\r\n    const dialogVisible = ref(false);\r\n    const dialogTitle = ref(\"新增用户\");\r\n    const formUser = reactive({id: null, username: \"\", email: \"\", password: \"\", age: null, gender: 1});\r\n\r\n    const buildQueryParams = () => {\r\n      const params = {page: page.value, pageSize: pageSize.value};\r\n      if (criteria.username) params.username = criteria.username;\r\n      if (criteria.email) params.email = criteria.email;\r\n      if (criteria.age) params.age = criteria.age;\r\n      if (criteria.gender !== null && criteria.gender !== \"\") params.gender = criteria.gender;\r\n      return params;\r\n    };\r\n\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const [uRes, eRes, aRes] = await Promise.all([\r\n          egg.get(`/user/options/username`),\r\n          egg.get(`/user/options/email`),\r\n          egg.get(`/user/options/age`),\r\n        ]);\r\n        usernameList.value = Array.isArray(uRes) ? uRes : [];\r\n        emailList.value = Array.isArray(eRes) ? eRes : [];\r\n        ageList.value = Array.isArray(aRes) ? aRes : [];\r\n      } catch (err) {\r\n        console.error(\"获取下拉选项失败:\", err.message);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await egg.get(`/user/query`, {params: buildQueryParams()});\r\n        pagedUsers.value = Array.isArray(res.data) ? res.data : [];\r\n        total.value = res.total || 0;\r\n        totalPages.value = Math.max(1, Math.ceil(total.value / pageSize.value));\r\n      } catch (err) {\r\n        console.error(\"获取用户列表失败:\", err.message);\r\n      }\r\n    };\r\n\r\n    const onQuery = async () => {\r\n      page.value = 1;\r\n      await fetchUsers();\r\n    };\r\n\r\n    const onReset = async () => {\r\n      criteria.username = null;\r\n      criteria.email = null;\r\n      criteria.age = null;\r\n      criteria.gender = null;\r\n      page.value = 1;\r\n      await fetchUsers();\r\n    };\r\n\r\n    const changePage = async (p) => {\r\n      page.value = p;\r\n      await fetchUsers();\r\n    };\r\n\r\n    const handleSizeChange = async (newSize) => {\r\n      pageSize.value = newSize;\r\n      page.value = 1;\r\n      await fetchUsers();\r\n    };\r\n\r\n    const openDialog = (type, user = null) => {\r\n      dialogTitle.value = type === \"add\" ? \"新增用户\" : \"编辑用户\";\r\n      if (user) {\r\n        Object.assign(formUser, user);\r\n      } else {\r\n        formUser.id = null;\r\n        formUser.username = \"\";\r\n        formUser.email = \"\";\r\n        formUser.password = \"\";\r\n        formUser.age = null;\r\n        formUser.gender = 1;\r\n      }\r\n      dialogVisible.value = true;\r\n    };\r\n\r\n    const saveUser = async () => {\r\n      try {\r\n        if (formUser.id) {\r\n          await egg.put(`/user/${formUser.id}`, {...formUser});\r\n        } else {\r\n          await egg.post(`/user`, {...formUser});\r\n        }\r\n        dialogVisible.value = false;\r\n        await fetchOptions();\r\n        await fetchUsers();\r\n      } catch (err) {\r\n        console.error(\"保存用户失败:\", err.message);\r\n      }\r\n    };\r\n\r\n    const confirmDelete = async (id) => {\r\n      try {\r\n        await ElMessageBox.confirm(\"确定要删除该用户吗？\", \"删除确认\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        });\r\n        await egg.delete(`/user/${id}`);\r\n        await fetchOptions();\r\n        await fetchUsers();\r\n      } catch (err) {\r\n        console.error(\"删除用户失败:\", err.message);\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      await fetchOptions();\r\n      await fetchUsers();\r\n    });\r\n\r\n    return {\r\n      criteria,\r\n      usernameList,\r\n      emailList,\r\n      ageList,\r\n      pagedUsers,\r\n      page,\r\n      pageSize,\r\n      total,\r\n      totalPages,\r\n      pageSizes,\r\n      dialogVisible,\r\n      dialogTitle,\r\n      formUser,\r\n      onQuery,\r\n      onReset,\r\n      changePage,\r\n      handleSizeChange,\r\n      openDialog,\r\n      saveUser,\r\n      confirmDelete,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-list {\r\n  padding: 20px;\r\n}\r\n\r\n.filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px;\r\n  align-items: center;\r\n}\r\n\r\n.filter-item {\r\n  flex: 1 1 180px;\r\n  max-width: 250px;\r\n}\r\n\r\n.el-select,\r\n.el-input {\r\n  width: 100% !important;\r\n  height: 40px;\r\n}\r\n\r\n.el-table th, .el-table td {\r\n  text-align: center;\r\n}\r\n\r\n.pagination-info {\r\n  margin: 10px 0;\r\n  text-align: right;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}