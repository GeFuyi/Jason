{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"egg-container\"\n};\nconst _hoisted_2 = {\n  border: \"1\",\n  cellpadding: \"5\"\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Egg 管理\", -1 /* CACHED */)), _createCommentVNode(\" 新增 Egg \"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newEgg.name = $event),\n    placeholder: \"名称\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newEgg.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newEgg.egglevel = $event),\n    type: \"number\",\n    placeholder: \"等级\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newEgg.egglevel, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.createEgg && $options.createEgg(...args))\n  }, \"新增\")]), _cache[5] || (_cache[5] = _createElementVNode(\"hr\", null, null, -1 /* CACHED */)), _createCommentVNode(\" Egg 列表 \"), _createElementVNode(\"table\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"名称\"), _createElementVNode(\"th\", null, \"等级\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.eggs, egg => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: egg.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(egg.id), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => egg.name = $event\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, egg.name]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => egg.egglevel = $event,\n      type: \"number\"\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, egg.egglevel, void 0, {\n      number: true\n    }]])]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.updateEgg(egg)\n    }, \"更新\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteEgg(egg.id)\n    }, \"删除\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","border","cellpadding","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","newEgg","name","$event","placeholder","egglevel","type","number","onClick","_cache","args","$options","createEgg","_hoisted_2","_Fragment","_renderList","eggs","egg","key","id","_toDisplayString","updateEgg","_hoisted_5","deleteEgg","_hoisted_6"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\egg\\EggPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"egg-container\">\r\n    <h1>Egg 管理</h1>\r\n\r\n    <!-- 新增 Egg -->\r\n    <div>\r\n      <input v-model=\"newEgg.name\" placeholder=\"名称\" />\r\n      <input v-model.number=\"newEgg.egglevel\" type=\"number\" placeholder=\"等级\" />\r\n      <button @click=\"createEgg\">新增</button>\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <!-- Egg 列表 -->\r\n    <table border=\"1\" cellpadding=\"5\">\r\n      <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>名称</th>\r\n        <th>等级</th>\r\n        <th>操作</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"egg in eggs\" :key=\"egg.id\">\r\n        <td>{{ egg.id }}</td>\r\n        <td>\r\n          <input v-model=\"egg.name\" />\r\n        </td>\r\n        <td>\r\n          <input v-model.number=\"egg.egglevel\" type=\"number\" />\r\n        </td>\r\n        <td>\r\n          <button @click=\"updateEgg(egg)\">更新</button>\r\n          <button @click=\"deleteEgg(egg.id)\">删除</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"EggPage\",\r\n  data() {\r\n    return {\r\n      eggs: [],\r\n      newEgg: {\r\n        name: \"\",\r\n        egglevel: 0,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取所有 Egg\r\n    async fetchEggs() {\r\n      try {\r\n        const res = await axios.get(\"http://localhost:8090/egg\");\r\n        this.eggs = res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    // 新增 Egg\r\n    async createEgg() {\r\n      try {\r\n        await axios.post(\"http://localhost:8090/egg\", this.newEgg);\r\n        this.newEgg.name = \"\";\r\n        this.newEgg.egglevel = 0;\r\n        this.fetchEggs();\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    // 更新 Egg\r\n    async updateEgg(egg) {\r\n      try {\r\n        await axios.put(\"http://localhost:8090/egg\", egg);\r\n        this.fetchEggs();\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    // 删除 Egg\r\n    async deleteEgg(id) {\r\n      try {\r\n        await axios.delete(`http://localhost:8090/egg/${id}`);\r\n        this.fetchEggs();\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchEggs();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.egg-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\ninput {\r\n  margin: 0 5px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 5px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAajBC,MAAM,EAAC,GAAG;EAACC,WAAW,EAAC;;;;;;;uBAbhCC,mBAAA,CAsCM,OAtCNC,UAsCM,G,0BArCJC,mBAAA,CAAe,YAAX,QAAM,qBAEVC,mBAAA,YAAe,EACfD,mBAAA,CAIM,c,gBAHJA,mBAAA,CAAgD;+DAAhCE,KAAA,CAAAC,MAAM,CAACC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAzBJ,KAAA,CAAAC,MAAM,CAACC,IAAI,E,mBAC3BJ,mBAAA,CAAyE;+DAAlDE,KAAA,CAAAC,MAAM,CAACI,QAAQ,GAAAF,MAAA;IAAEG,IAAI,EAAC,QAAQ;IAACF,WAAW,EAAC;iDAA3CJ,KAAA,CAAAC,MAAM,CAACI,QAAQ,E;IAAvBE,MAAM,EAAd;EAAgC,E,IACvCT,mBAAA,CAAsC;IAA7BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,IAAE,E,6BAG/BZ,mBAAA,CAAM,qCAENC,mBAAA,YAAe,EACfD,mBAAA,CAwBQ,SAxBRe,UAwBQ,G,0BAvBNf,mBAAA,CAOQ,gBANRA,mBAAA,CAKK,aAJHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,E,uBAGRA,mBAAA,CAcQ,iB,kBAbRF,mBAAA,CAYKkB,SAAA,QAAAC,WAAA,CAZaf,KAAA,CAAAgB,IAAI,EAAXC,GAAG;yBAAdrB,mBAAA,CAYK;MAZoBsB,GAAG,EAAED,GAAG,CAACE;QAChCrB,mBAAA,CAAqB,YAAAsB,gBAAA,CAAdH,GAAG,CAACE,EAAE,kBACbrB,mBAAA,CAEK,a,gBADHA,mBAAA,CAA4B;uCAAZmB,GAAG,CAACf,IAAI,GAAAC;wDAARc,GAAG,CAACf,IAAI,E,KAE1BJ,mBAAA,CAEK,a,gBADHA,mBAAA,CAAqD;uCAA9BmB,GAAG,CAACZ,QAAQ,GAAAF,MAAA;MAAEG,IAAI,EAAC;wDAAnBW,GAAG,CAACZ,QAAQ,E;MAApBE,MAAM,EAAd;IAA6B,E,MAEtCT,mBAAA,CAGK,aAFHA,mBAAA,CAA2C;MAAlCU,OAAK,EAAAL,MAAA,IAAEQ,QAAA,CAAAU,SAAS,CAACJ,GAAG;OAAG,IAAE,iBAAAK,UAAA,GAClCxB,mBAAA,CAA8C;MAArCU,OAAK,EAAAL,MAAA,IAAEQ,QAAA,CAAAY,SAAS,CAACN,GAAG,CAACE,EAAE;OAAG,IAAE,iBAAAK,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}