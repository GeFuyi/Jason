{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nconst BASE_URL = 'http://localhost:8090';\nexport default {\n  name: 'UserList',\n  setup() {\n    const criteria = ref({\n      username: '',\n      email: '',\n      age: '',\n      gender: ''\n    });\n    const usernameList = ref([]);\n    const emailList = ref([]);\n    const ageList = ref([]);\n    const genderList = ref([true, false]);\n    const pagedUsers = ref([]);\n    const page = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n\n    // 弹窗\n    const dialogVisible = ref(false);\n    const dialogTitle = ref('新增用户');\n    const formUser = ref({});\n\n    // ---------- 获取下拉选项 ----------\n    const fetchOptions = async () => {\n      try {\n        const [uRes, eRes, aRes] = await Promise.all([axios.get(`${BASE_URL}/user/options/username`), axios.get(`${BASE_URL}/user/options/email`), axios.get(`${BASE_URL}/user/options/age`)]);\n        usernameList.value = uRes.data;\n        emailList.value = eRes.data;\n        ageList.value = aRes.data;\n      } catch (err) {\n        ElMessage.error('获取下拉选项失败: ' + err);\n      }\n    };\n\n    // ---------- 查询用户 ----------\n    const fetchUsers = async () => {\n      try {\n        const params = {\n          username: criteria.value.username,\n          email: criteria.value.email,\n          age: criteria.value.age,\n          gender: criteria.value.gender,\n          page: page.value,\n          pageSize: pageSize.value\n        };\n        const res = await axios.get(`${BASE_URL}/user/query`, {\n          params\n        });\n        pagedUsers.value = res.data.data;\n        total.value = res.data.total;\n      } catch (err) {\n        ElMessage.error('查询用户失败: ' + err);\n      }\n    };\n    const changePage = p => {\n      page.value = p;\n      fetchUsers();\n    };\n\n    // ---------- 新增/编辑 ----------\n    const openDialog = (type, user = null) => {\n      dialogTitle.value = type === 'add' ? '新增用户' : '编辑用户';\n      if (type === 'edit' && user) {\n        formUser.value = {\n          ...user\n        };\n      } else {\n        formUser.value = {\n          username: '',\n          email: '',\n          password: '',\n          age: null,\n          gender: true\n        };\n      }\n      dialogVisible.value = true;\n    };\n    const saveUser = async () => {\n      try {\n        if (formUser.value.id) {\n          // 编辑\n          await axios.put(`${BASE_URL}/user/${formUser.value.id}`, formUser.value);\n          ElMessage.success('更新成功');\n        } else {\n          // 新增\n          await axios.post(`${BASE_URL}/user`, formUser.value);\n          ElMessage.success('新增成功');\n        }\n        dialogVisible.value = false;\n        await fetchOptions();\n        await fetchUsers();\n      } catch (err) {\n        ElMessage.error('保存失败: ' + err);\n      }\n    };\n\n    // ---------- 删除 ----------\n    const deleteUser = async id => {\n      try {\n        await axios.delete(`${BASE_URL}/user/${id}`);\n        ElMessage.success('删除成功');\n        await fetchOptions();\n        await fetchUsers();\n      } catch (err) {\n        ElMessage.error('删除失败: ' + err);\n      }\n    };\n    onMounted(async () => {\n      await fetchOptions();\n      await fetchUsers();\n    });\n    return {\n      criteria,\n      usernameList,\n      emailList,\n      ageList,\n      genderList,\n      pagedUsers,\n      page,\n      pageSize,\n      total,\n      dialogVisible,\n      dialogTitle,\n      formUser,\n      fetchUsers,\n      changePage,\n      openDialog,\n      saveUser,\n      deleteUser\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","ElMessage","BASE_URL","name","setup","criteria","username","email","age","gender","usernameList","emailList","ageList","genderList","pagedUsers","page","pageSize","total","dialogVisible","dialogTitle","formUser","fetchOptions","uRes","eRes","aRes","Promise","all","get","value","data","err","error","fetchUsers","params","res","changePage","p","openDialog","type","user","password","saveUser","id","put","success","post","deleteUser","delete"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-list\">\r\n    <el-card shadow=\"hover\">\r\n      <h2>用户管理</h2>\r\n\r\n      <!-- 条件筛选 -->\r\n      <div class=\"filters\">\r\n        <el-select v-model=\"criteria.username\" placeholder=\"全部用户名\" clearable>\r\n          <el-option v-for=\"u in usernameList\" :key=\"u\" :label=\"u\" :value=\"u\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select v-model=\"criteria.email\" placeholder=\"全部邮箱\" clearable>\r\n          <el-option v-for=\"e in emailList\" :key=\"e\" :label=\"e\" :value=\"e\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select v-model=\"criteria.age\" placeholder=\"全部年龄\" clearable>\r\n          <el-option v-for=\"a in ageList\" :key=\"a\" :label=\"a\" :value=\"a\"></el-option>\r\n        </el-select>\r\n\r\n        <el-select v-model=\"criteria.gender\" placeholder=\"全部性别\" clearable>\r\n          <el-option v-for=\"g in genderList\" :key=\"g\" :label=\"g ? '男' : '女'\" :value=\"g\"></el-option>\r\n        </el-select>\r\n\r\n        <el-button type=\"primary\" @click=\"fetchUsers\">查询</el-button>\r\n        <el-button type=\"success\" @click=\"openDialog('add')\">新增用户</el-button>\r\n      </div>\r\n\r\n      <!-- 用户表格 -->\r\n      <el-table :data=\"pagedUsers\" style=\"width: 100%\" stripe>\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column prop=\"email\" label=\"邮箱\" />\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\" />\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.gender ? '男' : '女' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          :page-size=\"pageSize\"\r\n          :current-page=\"page\"\r\n          :total=\"total\"\r\n          @current-change=\"changePage\"\r\n      ></el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 新增/编辑用户弹窗 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\r\n      <el-form :model=\"formUser\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"formUser.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"formUser.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"formUser.password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\">\r\n          <el-input v-model.number=\"formUser.age\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\">\r\n          <el-select v-model=\"formUser.gender\">\r\n            <el-option label=\"男\" :value=\"true\"></el-option>\r\n            <el-option label=\"女\" :value=\"false\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveUser\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst BASE_URL = 'http://localhost:8090';\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  setup() {\r\n    const criteria = ref({\r\n      username: '',\r\n      email: '',\r\n      age: '',\r\n      gender: ''\r\n    });\r\n\r\n    const usernameList = ref([]);\r\n    const emailList = ref([]);\r\n    const ageList = ref([]);\r\n    const genderList = ref([true, false]);\r\n\r\n    const pagedUsers = ref([]);\r\n    const page = ref(1);\r\n    const pageSize = ref(10);\r\n    const total = ref(0);\r\n\r\n    // 弹窗\r\n    const dialogVisible = ref(false);\r\n    const dialogTitle = ref('新增用户');\r\n    const formUser = ref({});\r\n\r\n    // ---------- 获取下拉选项 ----------\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const [uRes, eRes, aRes] = await Promise.all([\r\n          axios.get(`${BASE_URL}/user/options/username`),\r\n          axios.get(`${BASE_URL}/user/options/email`),\r\n          axios.get(`${BASE_URL}/user/options/age`)\r\n        ]);\r\n        usernameList.value = uRes.data;\r\n        emailList.value = eRes.data;\r\n        ageList.value = aRes.data;\r\n      } catch (err) {\r\n        ElMessage.error('获取下拉选项失败: ' + err);\r\n      }\r\n    };\r\n\r\n    // ---------- 查询用户 ----------\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const params = {\r\n          username: criteria.value.username,\r\n          email: criteria.value.email,\r\n          age: criteria.value.age,\r\n          gender: criteria.value.gender,\r\n          page: page.value,\r\n          pageSize: pageSize.value\r\n        };\r\n        const res = await axios.get(`${BASE_URL}/user/query`, { params });\r\n        pagedUsers.value = res.data.data;\r\n        total.value = res.data.total;\r\n      } catch (err) {\r\n        ElMessage.error('查询用户失败: ' + err);\r\n      }\r\n    };\r\n\r\n    const changePage = (p) => {\r\n      page.value = p;\r\n      fetchUsers();\r\n    };\r\n\r\n    // ---------- 新增/编辑 ----------\r\n    const openDialog = (type, user = null) => {\r\n      dialogTitle.value = type === 'add' ? '新增用户' : '编辑用户';\r\n      if (type === 'edit' && user) {\r\n        formUser.value = { ...user };\r\n      } else {\r\n        formUser.value = { username: '', email: '', password: '', age: null, gender: true };\r\n      }\r\n      dialogVisible.value = true;\r\n    };\r\n\r\n    const saveUser = async () => {\r\n      try {\r\n        if (formUser.value.id) {\r\n          // 编辑\r\n          await axios.put(`${BASE_URL}/user/${formUser.value.id}`, formUser.value);\r\n          ElMessage.success('更新成功');\r\n        } else {\r\n          // 新增\r\n          await axios.post(`${BASE_URL}/user`, formUser.value);\r\n          ElMessage.success('新增成功');\r\n        }\r\n        dialogVisible.value = false;\r\n        await fetchOptions();\r\n        await fetchUsers();\r\n      } catch (err) {\r\n        ElMessage.error('保存失败: ' + err);\r\n      }\r\n    };\r\n\r\n    // ---------- 删除 ----------\r\n    const deleteUser = async (id) => {\r\n      try {\r\n        await axios.delete(`${BASE_URL}/user/${id}`);\r\n        ElMessage.success('删除成功');\r\n        await fetchOptions();\r\n        await fetchUsers();\r\n      } catch (err) {\r\n        ElMessage.error('删除失败: ' + err);\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      await fetchOptions();\r\n      await fetchUsers();\r\n    });\r\n\r\n    return {\r\n      criteria,\r\n      usernameList,\r\n      emailList,\r\n      ageList,\r\n      genderList,\r\n      pagedUsers,\r\n      page,\r\n      pageSize,\r\n      total,\r\n      dialogVisible,\r\n      dialogTitle,\r\n      formUser,\r\n      fetchUsers,\r\n      changePage,\r\n      openDialog,\r\n      saveUser,\r\n      deleteUser\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-list {\r\n  padding: 20px;\r\n}\r\n.filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n.el-table th, .el-table td {\r\n  text-align: center;\r\n}\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}