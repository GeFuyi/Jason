{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nlet stompClient = null;\nlet isConnected = false;\nexport function connect(userId, onMessageReceived) {\n  const socket = new SockJS('http://localhost:8080/ws-chat');\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    debug: str => console.log(str)\n  });\n  stompClient.onConnect = () => {\n    console.log('STOMP connected');\n    isConnected = true;\n\n    // 群聊\n    stompClient.subscribe('/topic/group', msg => onMessageReceived(JSON.parse(msg.body)));\n\n    // 私聊\n    stompClient.subscribe(`/user/${userId}/queue/private`, msg => onMessageReceived(JSON.parse(msg.body)));\n  };\n  stompClient.onStompError = frame => {\n    console.error('STOMP broker error: ' + frame.headers['message']);\n    console.error('Details: ' + frame.body);\n  };\n  stompClient.activate();\n}\nexport function sendMessage(fromUserId, toUserId, content) {\n  if (!stompClient || !isConnected) {\n    console.error('STOMP not connected yet!');\n    return;\n  }\n  const payload = {\n    fromUserId,\n    toUserId,\n    content\n  };\n  stompClient.publish({\n    destination: '/app/chat.send',\n    body: JSON.stringify(payload)\n  });\n}","map":{"version":3,"names":["Client","SockJS","stompClient","isConnected","connect","userId","onMessageReceived","socket","webSocketFactory","debug","str","console","log","onConnect","subscribe","msg","JSON","parse","body","onStompError","frame","error","headers","activate","sendMessage","fromUserId","toUserId","content","payload","publish","destination","stringify"],"sources":["D:/Final/springboot_egg/egg-web/src/utils/chat.js"],"sourcesContent":["import { Client } from '@stomp/stompjs'\r\nimport SockJS from 'sockjs-client'\r\n\r\nlet stompClient = null\r\nlet isConnected = false\r\n\r\nexport function connect(userId, onMessageReceived) {\r\n    const socket = new SockJS('http://localhost:8080/ws-chat')\r\n    stompClient = new Client({\r\n        webSocketFactory: () => socket,\r\n        debug: str => console.log(str)\r\n    })\r\n\r\n    stompClient.onConnect = () => {\r\n        console.log('STOMP connected')\r\n        isConnected = true\r\n\r\n        // 群聊\r\n        stompClient.subscribe('/topic/group', msg => onMessageReceived(JSON.parse(msg.body)))\r\n\r\n        // 私聊\r\n        stompClient.subscribe(`/user/${userId}/queue/private`, msg => onMessageReceived(JSON.parse(msg.body)))\r\n    }\r\n\r\n    stompClient.onStompError = frame => {\r\n        console.error('STOMP broker error: ' + frame.headers['message'])\r\n        console.error('Details: ' + frame.body)\r\n    }\r\n\r\n    stompClient.activate()\r\n}\r\n\r\nexport function sendMessage(fromUserId, toUserId, content) {\r\n    if (!stompClient || !isConnected) {\r\n        console.error('STOMP not connected yet!')\r\n        return\r\n    }\r\n\r\n    const payload = { fromUserId, toUserId, content }\r\n    stompClient.publish({\r\n        destination: '/app/chat.send',\r\n        body: JSON.stringify(payload)\r\n    })\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,WAAW,GAAG,KAAK;AAEvB,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAEC,iBAAiB,EAAE;EAC/C,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,+BAA+B,CAAC;EAC1DC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACrBQ,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,KAAK,EAAEC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG;EACjC,CAAC,CAAC;EAEFR,WAAW,CAACW,SAAS,GAAG,MAAM;IAC1BF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BT,WAAW,GAAG,IAAI;;IAElB;IACAD,WAAW,CAACY,SAAS,CAAC,cAAc,EAAEC,GAAG,IAAIT,iBAAiB,CAACU,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;;IAErF;IACAhB,WAAW,CAACY,SAAS,CAAC,SAAST,MAAM,gBAAgB,EAAEU,GAAG,IAAIT,iBAAiB,CAACU,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;EAC1G,CAAC;EAEDhB,WAAW,CAACiB,YAAY,GAAGC,KAAK,IAAI;IAChCT,OAAO,CAACU,KAAK,CAAC,sBAAsB,GAAGD,KAAK,CAACE,OAAO,CAAC,SAAS,CAAC,CAAC;IAChEX,OAAO,CAACU,KAAK,CAAC,WAAW,GAAGD,KAAK,CAACF,IAAI,CAAC;EAC3C,CAAC;EAEDhB,WAAW,CAACqB,QAAQ,CAAC,CAAC;AAC1B;AAEA,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACvD,IAAI,CAACzB,WAAW,IAAI,CAACC,WAAW,EAAE;IAC9BQ,OAAO,CAACU,KAAK,CAAC,0BAA0B,CAAC;IACzC;EACJ;EAEA,MAAMO,OAAO,GAAG;IAAEH,UAAU;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EACjDzB,WAAW,CAAC2B,OAAO,CAAC;IAChBC,WAAW,EAAE,gBAAgB;IAC7BZ,IAAI,EAAEF,IAAI,CAACe,SAAS,CAACH,OAAO;EAChC,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}