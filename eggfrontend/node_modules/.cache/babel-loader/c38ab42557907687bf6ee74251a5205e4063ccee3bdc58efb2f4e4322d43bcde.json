{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"userlist-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_radio = _resolveComponent(\"el-radio\");\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"userlist-card\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"用户管理\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => $options.openDialog('add'))\n    }, {\n      default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"新增用户\", -1 /* CACHED */)])),\n      _: 1 /* STABLE */,\n      __: [8]\n    })]), _createVNode(_component_el_table, {\n      data: $data.users,\n      border: \"\",\n      style: {\n        \"width\": \"100%\"\n      },\n      stripe: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"60\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"username\",\n        label: \"用户名\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"email\",\n        label: \"邮箱\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"age\",\n        label: \"年龄\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"gender\",\n        label: \"性别\",\n        width: \"80\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString(scope.row.gender ? '男' : '女'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"180\"\n      }, {\n        default: _withCtx(scope => [_createVNode(_component_el_button, {\n          size: \"mini\",\n          type: \"primary\",\n          onClick: $event => $options.openDialog('edit', scope.row)\n        }, {\n          default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"编辑\", -1 /* CACHED */)])),\n          _: 2 /* DYNAMIC */,\n          __: [10]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          size: \"mini\",\n          type: \"danger\",\n          onClick: $event => $options.deleteUser(scope.row.id)\n        }, {\n          default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"删除\", -1 /* CACHED */)])),\n          _: 2 /* DYNAMIC */,\n          __: [11]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 新增/编辑用户对话框 \"), _createVNode(_component_el_dialog, {\n      modelValue: $data.dialogVisible,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.dialogVisible = $event),\n      title: $data.dialogTitle\n    }, {\n      footer: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[6] || (_cache[6] = $event => $data.dialogVisible = false)\n      }, {\n        default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"取消\", -1 /* CACHED */)])),\n        _: 1 /* STABLE */,\n        __: [14]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitForm\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.dialogTitle), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        model: $data.form,\n        ref: \"userForm\",\n        \"label-width\": \"80px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"用户名\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.form.username,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.username = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"邮箱\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.form.email,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.email = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"密码\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"password\",\n            modelValue: $data.form.password,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.password = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"年龄\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            type: \"number\",\n            modelValue: $data.form.age,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.age = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"性别\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_radio_group, {\n            modelValue: $data.form.gender,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.form.gender = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_radio, {\n              label: true\n            }, {\n              default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"男\", -1 /* CACHED */)])),\n              _: 1 /* STABLE */,\n              __: [12]\n            }), _createVNode(_component_el_radio, {\n              label: false\n            }, {\n              default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"女\", -1 /* CACHED */)])),\n              _: 1 /* STABLE */,\n              __: [13]\n            })]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"title\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","_cache","$event","$options","openDialog","_component_el_table","data","$data","users","border","style","stripe","_component_el_table_column","prop","label","width","default","_withCtx","scope","row","gender","size","deleteUser","id","_createCommentVNode","_component_el_dialog","dialogVisible","title","dialogTitle","footer","submitForm","_component_el_form","model","form","ref","_component_el_form_item","_component_el_input","username","email","password","age","_component_el_radio_group","_component_el_radio"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist-container\">\r\n    <el-card class=\"userlist-card\">\r\n      <div class=\"header\">\r\n        <h2>用户管理</h2>\r\n        <el-button type=\"primary\" @click=\"openDialog('add')\">新增用户</el-button>\r\n      </div>\r\n\r\n      <el-table\r\n          :data=\"users\"\r\n          border\r\n          style=\"width: 100%\"\r\n          stripe\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column prop=\"email\" label=\"邮箱\" />\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\" />\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.gender ? '男' : '女' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑用户对话框 -->\r\n      <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\r\n        <el-form :model=\"form\" ref=\"userForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\">\r\n            <el-input v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\">\r\n            <el-input v-model=\"form.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\">\r\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"年龄\">\r\n            <el-input type=\"number\" v-model=\"form.age\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group v-model=\"form.gender\">\r\n              <el-radio :label=\"true\">男</el-radio>\r\n              <el-radio :label=\"false\">女</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <!-- 对话框底部按钮 -->\r\n        <template #footer>\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">{{ dialogTitle }}</el-button>\r\n        </template>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '新增用户',\r\n      form: {\r\n        id: null,\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        age: null,\r\n        gender: true\r\n      },\r\n      editMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers()\r\n  },\r\n  methods: {\r\n    // 获取用户列表\r\n    fetchUsers() {\r\n      axios.get('http://localhost:8090/user')\r\n          .then(res => {\r\n            this.users = res.data\r\n          })\r\n          .catch(err => {\r\n            this.$message.error('获取用户列表失败')\r\n            console.error(err)\r\n          })\r\n    },\r\n    // 打开新增/编辑对话框\r\n    openDialog(mode, user) {\r\n      this.editMode = mode === 'edit'\r\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户'\r\n      if (this.editMode && user) {\r\n        this.form = { ...user }  // 复制用户数据\r\n      } else {\r\n        this.form = { id: null, username: '', email: '', password: '', age: null, gender: true }\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    // 提交新增/编辑\r\n    submitForm() {\r\n      if (this.editMode) {\r\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('更新成功')\r\n                this.dialogVisible = false\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('更新失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('更新请求失败')\r\n              console.error(err)\r\n            })\r\n      } else {\r\n        axios.post('http://localhost:8090/user', this.form)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('新增成功')\r\n                this.dialogVisible = false\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('新增失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('新增请求失败')\r\n              console.error(err)\r\n            })\r\n      }\r\n    },\r\n    // 删除用户\r\n    deleteUser(id) {\r\n      this.$confirm('确定删除该用户吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        axios.delete(`http://localhost:8090/user/${id}`)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('删除成功')\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('删除失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('删除请求失败')\r\n              console.error(err)\r\n            })\r\n      }).catch(() => {\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nhtml, body, #app {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n.userlist-container {\r\n  display: flex;\r\n  justify-content: center;  /* 水平居中表格卡片 */\r\n  align-items: flex-start;  /* 顶部对齐 */\r\n  padding: 20px;            /* 卡片与边缘保持一点距离 */\r\n  background: #f5f5f5;\r\n  min-height: 100vh;         /* 占满整个屏幕 */\r\n  box-sizing: border-box;\r\n}\r\n\r\n.userlist-card {\r\n  width: 90%;                /* 可根据屏幕调整宽度 */\r\n  max-width: 1200px;         /* 不会太宽，表格保持原布局 */\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}