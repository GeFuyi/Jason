{"ast":null,"code":"import { nextTick } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'UserList',\n  data() {\n    return {\n      users: [],\n      dialogVisible: false,\n      dialogTitle: '新增用户',\n      form: {\n        id: null,\n        username: '',\n        email: '',\n        password: '',\n        age: null,\n        gender: true\n      },\n      editMode: false,\n      filterType: 'ALL',\n      filterOptions: [{\n        label: '全部用户',\n        value: 'ALL'\n      }, {\n        label: '最近改动',\n        value: 'RECENT'\n      }],\n      queryId: null,\n      tableVisible: true\n    };\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n  methods: {\n    onFilterChange() {\n      // 避免 ResizeObserver 循环，先隐藏表格\n      this.tableVisible = false;\n      nextTick(() => {\n        this.fetchUsers();\n        this.tableVisible = true;\n      });\n    },\n    fetchUsers() {\n      let url = 'http://localhost:8090/user';\n      if (this.filterType === 'RECENT') url = 'http://localhost:8090/user/recent';\n      axios.get(url).then(res => {\n        this.users = res.data;\n      }).catch(err => {\n        this.$message.error('获取用户列表失败');\n        console.error(err);\n      });\n    },\n    fetchUserById() {\n      if (!this.queryId) return this.$message.warning('请输入用户ID');\n      if (this.filterType !== 'ALL') return;\n      axios.get(`http://localhost:8090/user/${this.queryId}`).then(res => {\n        if (res.data) this.users = [res.data];else this.$message.info('未找到该 ID 的用户');\n      }).catch(err => {\n        this.$message.error('查询失败');\n        console.error(err);\n      });\n    },\n    openDialog(mode, user) {\n      this.editMode = mode === 'edit';\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户';\n      this.form = this.editMode && user ? {\n        ...user\n      } : {\n        id: null,\n        username: '',\n        email: '',\n        password: '',\n        age: null,\n        gender: true\n      };\n      this.dialogVisible = true;\n    },\n    submitForm() {\n      if (this.editMode) {\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form).then(() => {\n          this.$message.success('更新成功');\n          this.dialogVisible = false;\n          this.fetchUsers();\n        }).catch(() => {\n          this.$message.error('更新请求失败');\n        });\n      } else {\n        axios.post('http://localhost:8090/user', this.form).then(() => {\n          this.$message.success('新增成功');\n          this.dialogVisible = false;\n          this.fetchUsers();\n        }).catch(() => {\n          this.$message.error('新增请求失败');\n        });\n      }\n    },\n    deleteUser(id) {\n      this.$confirm('确定删除该用户吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(`http://localhost:8090/user/${id}`).then(() => {\n          this.$message.success('删除成功');\n          this.fetchUsers();\n        }).catch(() => {\n          this.$message.error('删除请求失败');\n        });\n      }).catch(() => {});\n    },\n    clearRecentCache() {\n      axios.post('http://localhost:8090/user/recent/clear').then(() => {\n        this.$message.success('RECENT 缓存已清空');\n        this.fetchUsers();\n      }).catch(() => {\n        this.$message.error('清空缓存失败');\n      });\n    },\n    removeRecentCache(id) {\n      axios.delete(`http://localhost:8090/user/recent/remove/${id}`).then(() => {\n        this.$message.success(`RECENT 缓存已移除ID=${id}`);\n        this.fetchUsers();\n      }).catch(() => {\n        this.$message.error('移除缓存失败');\n      });\n    }\n  }\n};","map":{"version":3,"names":["nextTick","axios","name","data","users","dialogVisible","dialogTitle","form","id","username","email","password","age","gender","editMode","filterType","filterOptions","label","value","queryId","tableVisible","mounted","fetchUsers","methods","onFilterChange","url","get","then","res","catch","err","$message","error","console","fetchUserById","warning","info","openDialog","mode","user","submitForm","put","success","post","deleteUser","$confirm","confirmButtonText","cancelButtonText","type","delete","clearRecentCache","removeRecentCache"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist-container\">\r\n    <el-card class=\"userlist-card\">\r\n      <div class=\"header\">\r\n        <h2>用户管理</h2>\r\n        <div class=\"header-controls\">\r\n          <!-- 显示类型选择 -->\r\n          <el-select v-model=\"filterType\" placeholder=\"选择显示类型\" @change=\"onFilterChange\" size=\"small\">\r\n            <el-option v-for=\"option in filterOptions\" :key=\"option.value\" :label=\"option.label\" :value=\"option.value\"></el-option>\r\n          </el-select>\r\n\r\n          <!-- 单条查询 & 显示全部，只在 ALL 模式 -->\r\n          <template v-if=\"filterType==='ALL'\">\r\n            <el-input v-model.number=\"queryId\" placeholder=\"输入用户ID查询\" size=\"small\" style=\"width: 120px;\" />\r\n            <el-button type=\"primary\" size=\"small\" @click=\"fetchUserById\">查询</el-button>\r\n            <el-button type=\"info\" size=\"small\" @click=\"fetchUsers\">显示全部</el-button>\r\n          </template>\r\n\r\n          <el-button type=\"primary\" @click=\"openDialog('add')\">新增用户</el-button>\r\n\r\n          <!-- 清空 RECENT 缓存，只在 RECENT 模式 -->\r\n          <template v-if=\"filterType==='RECENT'\">\r\n            <el-button type=\"warning\" size=\"small\" @click=\"clearRecentCache\">清空 RECENT</el-button>\r\n          </template>\r\n        </div>\r\n      </div>\r\n\r\n      <el-table\r\n          v-if=\"tableVisible\"\r\n          :data=\"users\"\r\n          border\r\n          stripe\r\n          style=\"width: 100%; max-height: 600px;\"\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column prop=\"email\" label=\"邮箱\" />\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\" />\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">{{ scope.row.gender ? '男' : '女' }}</template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"260\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n            <el-button\r\n                v-if=\"filterType==='RECENT'\"\r\n                size=\"mini\"\r\n                type=\"warning\"\r\n                @click=\"removeRecentCache(scope.row.id)\"\r\n            >\r\n              移除缓存\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑用户对话框 -->\r\n      <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\r\n        <el-form :model=\"form\" ref=\"userForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\">\r\n            <el-input v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\">\r\n            <el-input v-model=\"form.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\">\r\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"年龄\">\r\n            <el-input type=\"number\" v-model=\"form.age\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group v-model=\"form.gender\">\r\n              <el-radio :label=\"true\">男</el-radio>\r\n              <el-radio :label=\"false\">女</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n        <template #footer>\r\n          <el-button @click=\"dialogVisible=false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">{{ dialogTitle }}</el-button>\r\n        </template>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { nextTick } from 'vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '新增用户',\r\n      form: { id: null, username: '', email: '', password: '', age: null, gender: true },\r\n      editMode: false,\r\n      filterType: 'ALL',\r\n      filterOptions: [\r\n        { label: '全部用户', value: 'ALL' },\r\n        { label: '最近改动', value: 'RECENT' }\r\n      ],\r\n      queryId: null,\r\n      tableVisible: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers()\r\n  },\r\n  methods: {\r\n    onFilterChange() {\r\n      // 避免 ResizeObserver 循环，先隐藏表格\r\n      this.tableVisible = false\r\n      nextTick(() => {\r\n        this.fetchUsers()\r\n        this.tableVisible = true\r\n      })\r\n    },\r\n    fetchUsers() {\r\n      let url = 'http://localhost:8090/user'\r\n      if (this.filterType === 'RECENT') url = 'http://localhost:8090/user/recent'\r\n      axios.get(url)\r\n          .then(res => { this.users = res.data })\r\n          .catch(err => { this.$message.error('获取用户列表失败'); console.error(err) })\r\n    },\r\n    fetchUserById() {\r\n      if (!this.queryId) return this.$message.warning('请输入用户ID')\r\n      if (this.filterType !== 'ALL') return\r\n      axios.get(`http://localhost:8090/user/${this.queryId}`)\r\n          .then(res => {\r\n            if (res.data) this.users = [res.data]\r\n            else this.$message.info('未找到该 ID 的用户')\r\n          })\r\n          .catch(err => { this.$message.error('查询失败'); console.error(err) })\r\n    },\r\n    openDialog(mode, user) {\r\n      this.editMode = mode === 'edit'\r\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户'\r\n      this.form = this.editMode && user ? { ...user } : { id:null, username:'', email:'', password:'', age:null, gender:true }\r\n      this.dialogVisible = true\r\n    },\r\n    submitForm() {\r\n      if (this.editMode) {\r\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form)\r\n            .then(() => { this.$message.success('更新成功'); this.dialogVisible=false; this.fetchUsers() })\r\n            .catch(() => { this.$message.error('更新请求失败') })\r\n      } else {\r\n        axios.post('http://localhost:8090/user', this.form)\r\n            .then(() => { this.$message.success('新增成功'); this.dialogVisible=false; this.fetchUsers() })\r\n            .catch(() => { this.$message.error('新增请求失败') })\r\n      }\r\n    },\r\n    deleteUser(id) {\r\n      this.$confirm('确定删除该用户吗？','提示',{confirmButtonText:'确定',cancelButtonText:'取消',type:'warning'})\r\n          .then(()=>{ axios.delete(`http://localhost:8090/user/${id}`)\r\n              .then(()=>{ this.$message.success('删除成功'); this.fetchUsers() })\r\n              .catch(()=>{ this.$message.error('删除请求失败') }) })\r\n          .catch(()=>{})\r\n    },\r\n    clearRecentCache() {\r\n      axios.post('http://localhost:8090/user/recent/clear')\r\n          .then(()=>{ this.$message.success('RECENT 缓存已清空'); this.fetchUsers() })\r\n          .catch(()=>{ this.$message.error('清空缓存失败') })\r\n    },\r\n    removeRecentCache(id) {\r\n      axios.delete(`http://localhost:8090/user/recent/remove/${id}`)\r\n          .then(()=>{ this.$message.success(`RECENT 缓存已移除ID=${id}`); this.fetchUsers() })\r\n          .catch(()=>{ this.$message.error('移除缓存失败') })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.userlist-container {\r\n  display:flex;\r\n  justify-content:center;\r\n  padding:30px;\r\n  background:#f5f5f5;\r\n  min-height:100vh;\r\n}\r\n.userlist-card {\r\n  width:100%;\r\n  max-width:1100px;\r\n  padding:20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n.header {\r\n  display:flex;\r\n  justify-content:space-between;\r\n  align-items:center;\r\n  margin-bottom:20px;\r\n  flex-wrap: wrap;\r\n  gap:10px;\r\n}\r\n.header-controls {\r\n  display:flex;\r\n  flex-wrap:wrap;\r\n  align-items:center;\r\n  gap:10px;\r\n}\r\n.dialog-footer { text-align:right; }\r\n.el-table .warning { color:#E6A23C }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}