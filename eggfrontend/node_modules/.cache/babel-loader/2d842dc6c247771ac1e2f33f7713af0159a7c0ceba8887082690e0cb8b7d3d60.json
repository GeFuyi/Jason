{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'UserList',\n  data() {\n    return {\n      users: [],\n      dialogVisible: false,\n      dialogTitle: '新增用户',\n      form: {\n        id: null,\n        username: '',\n        email: '',\n        password: '',\n        age: null,\n        gender: true\n      },\n      editMode: false\n    };\n  },\n  mounted() {\n    this.fetchUsers();\n  },\n  methods: {\n    // 获取用户列表\n    fetchUsers() {\n      axios.get('http://localhost:8090/user').then(res => {\n        this.users = res.data;\n      }).catch(err => {\n        this.$message.error('获取用户列表失败');\n        console.error(err);\n      });\n    },\n    // 打开新增/编辑对话框\n    openDialog(mode, user) {\n      this.editMode = mode === 'edit';\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户';\n      if (this.editMode && user) {\n        this.form = {\n          ...user\n        }; // 复制用户数据\n      } else {\n        this.form = {\n          id: null,\n          username: '',\n          email: '',\n          password: '',\n          age: null,\n          gender: true\n        };\n      }\n      this.dialogVisible = true;\n    },\n    // 提交新增/编辑\n    submitForm() {\n      if (this.editMode) {\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form).then(res => {\n          if (res.data) {\n            this.$message.success('更新成功');\n            this.dialogVisible = false;\n            this.fetchUsers();\n          } else {\n            this.$message.error('更新失败');\n          }\n        }).catch(err => {\n          this.$message.error('更新请求失败');\n          console.error(err);\n        });\n      } else {\n        axios.post('http://localhost:8090/user', this.form).then(res => {\n          if (res.data) {\n            this.$message.success('新增成功');\n            this.dialogVisible = false;\n            this.fetchUsers();\n          } else {\n            this.$message.error('新增失败');\n          }\n        }).catch(err => {\n          this.$message.error('新增请求失败');\n          console.error(err);\n        });\n      }\n    },\n    // 删除用户\n    deleteUser(id) {\n      this.$confirm('确定删除该用户吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        axios.delete(`http://localhost:8090/user/${id}`).then(res => {\n          if (res.data) {\n            this.$message.success('删除成功');\n            this.fetchUsers();\n          } else {\n            this.$message.error('删除失败');\n          }\n        }).catch(err => {\n          this.$message.error('删除请求失败');\n          console.error(err);\n        });\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","users","dialogVisible","dialogTitle","form","id","username","email","password","age","gender","editMode","mounted","fetchUsers","methods","get","then","res","catch","err","$message","error","console","openDialog","mode","user","submitForm","put","success","post","deleteUser","$confirm","confirmButtonText","cancelButtonText","type","delete"],"sources":["D:\\Final\\springboot_egg\\egg-web\\src\\user\\UserList.vue"],"sourcesContent":["<template>\r\n  <div class=\"userlist-container\">\r\n    <el-card class=\"userlist-card\">\r\n      <div class=\"header\">\r\n        <h2>用户管理</h2>\r\n        <el-button type=\"primary\" @click=\"openDialog('add')\">新增用户</el-button>\r\n      </div>\r\n\r\n      <el-table\r\n          :data=\"users\"\r\n          border\r\n          style=\"width: 100%\"\r\n          stripe\r\n      >\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"60\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column prop=\"email\" label=\"邮箱\" />\r\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\" />\r\n        <el-table-column prop=\"gender\" label=\"性别\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            {{ scope.row.gender ? '男' : '女' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"openDialog('edit', scope.row)\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 新增/编辑用户对话框 -->\r\n      <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\r\n        <el-form :model=\"form\" ref=\"userForm\" label-width=\"80px\">\r\n          <el-form-item label=\"用户名\">\r\n            <el-input v-model=\"form.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\">\r\n            <el-input v-model=\"form.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\">\r\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"年龄\">\r\n            <el-input type=\"number\" v-model=\"form.age\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"性别\">\r\n            <el-radio-group v-model=\"form.gender\">\r\n              <el-radio :label=\"true\">男</el-radio>\r\n              <el-radio :label=\"false\">女</el-radio>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </el-form>\r\n\r\n        <!-- 对话框底部按钮 -->\r\n        <template #footer>\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">{{ dialogTitle }}</el-button>\r\n        </template>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    return {\r\n      users: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '新增用户',\r\n      form: {\r\n        id: null,\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        age: null,\r\n        gender: true\r\n      },\r\n      editMode: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers()\r\n  },\r\n  methods: {\r\n    // 获取用户列表\r\n    fetchUsers() {\r\n      axios.get('http://localhost:8090/user')\r\n          .then(res => {\r\n            this.users = res.data\r\n          })\r\n          .catch(err => {\r\n            this.$message.error('获取用户列表失败')\r\n            console.error(err)\r\n          })\r\n    },\r\n    // 打开新增/编辑对话框\r\n    openDialog(mode, user) {\r\n      this.editMode = mode === 'edit'\r\n      this.dialogTitle = this.editMode ? '编辑用户' : '新增用户'\r\n      if (this.editMode && user) {\r\n        this.form = { ...user }  // 复制用户数据\r\n      } else {\r\n        this.form = { id: null, username: '', email: '', password: '', age: null, gender: true }\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    // 提交新增/编辑\r\n    submitForm() {\r\n      if (this.editMode) {\r\n        axios.put(`http://localhost:8090/user/${this.form.id}`, this.form)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('更新成功')\r\n                this.dialogVisible = false\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('更新失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('更新请求失败')\r\n              console.error(err)\r\n            })\r\n      } else {\r\n        axios.post('http://localhost:8090/user', this.form)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('新增成功')\r\n                this.dialogVisible = false\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('新增失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('新增请求失败')\r\n              console.error(err)\r\n            })\r\n      }\r\n    },\r\n    // 删除用户\r\n    deleteUser(id) {\r\n      this.$confirm('确定删除该用户吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        axios.delete(`http://localhost:8090/user/${id}`)\r\n            .then(res => {\r\n              if (res.data) {\r\n                this.$message.success('删除成功')\r\n                this.fetchUsers()\r\n              } else {\r\n                this.$message.error('删除失败')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.$message.error('删除请求失败')\r\n              console.error(err)\r\n            })\r\n      }).catch(() => {\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 让 html 和 body 也占满全屏 */\r\nhtml, body, #app {\r\n  height: 100%;\r\n  margin: 0;\r\n}\r\n\r\n/* 容器全屏居中 */\r\n.userlist-container {\r\n  display: flex;\r\n  justify-content: center;  /* 水平居中 */\r\n  align-items: center;      /* 垂直居中 */\r\n  padding: 30px;\r\n  background: #f5f5f5;\r\n  min-height: 100%;         /* 或者 100vh 也行 */\r\n  box-sizing: border-box;   /* 防止 padding 导致滚动条 */\r\n}\r\n\r\n/* 卡片宽度自适应，可根据屏幕缩放 */\r\n.userlist-card {\r\n  width: 90%;       /* 改成百分比自适应屏幕 */\r\n  max-width: 1200px; /* 最大宽度 */\r\n  padding: 20px;\r\n}\r\n\r\n/* 头部样式 */\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 对话框底部按钮 */\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}